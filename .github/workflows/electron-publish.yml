name: Publish Electron App

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
      - "releases/**"

jobs:
  build-go:
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: |
            server/go.sum
          go-version-file: "server/go.mod"

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - run: go env
      - run: brew install mingw-w64
      - name: Make binaries
        run: cd client && npm run build-go-unix
      - name: Upload binaries to artifacts 
        uses: actions/upload-artifact@master
        with:
          name: binaries
          path: ./server/resources/app/go-binaries

  build-mac:
    runs-on: macos-latest
    needs: build-go
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: cd client && npm install

      - uses: actions/download-artifact@master
        with:
          name: binaries
          path: ./server/resources/app/go-binaries

      - name: Build and publish Electron app
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          ELECTRON_FORGE_GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          SECRET: ${{ secrets.ENCRYPT_SECRET }}
          ENV: "PROD"
        run: cd client && npm run publish

  build-win:
    runs-on: windows-latest
    needs: build-go
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: cd client && npm install

      - uses: actions/download-artifact@master
        with:
          name: binaries
          path: ./server/resources/app/go-binaries

      - name: Build and publish Electron app
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          ELECTRON_FORGE_GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          SECRET: ${{ secrets.ENCRYPT_SECRET }}
          ENV: "PROD"
        run: cd client && npm run publish
