// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: marketData.proto

package grpcGW_marketdata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Что ждем от клиента
type GetCandlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentId string                 `protobuf:"bytes,1,opt,name=instrumentId,proto3" json:"instrumentId,omitempty"`
	Interval     int32                  `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Start        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetCandlesRequest) Reset() {
	*x = GetCandlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketData_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandlesRequest) ProtoMessage() {}

func (x *GetCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketData_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandlesRequest.ProtoReflect.Descriptor instead.
func (*GetCandlesRequest) Descriptor() ([]byte, []int) {
	return file_marketData_proto_rawDescGZIP(), []int{0}
}

func (x *GetCandlesRequest) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *GetCandlesRequest) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *GetCandlesRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetCandlesRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type Quant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Units int32 `protobuf:"varint,1,opt,name=units,proto3" json:"units,omitempty"`
	Nano  int32 `protobuf:"varint,2,opt,name=nano,proto3" json:"nano,omitempty"`
}

func (x *Quant) Reset() {
	*x = Quant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketData_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quant) ProtoMessage() {}

func (x *Quant) ProtoReflect() protoreflect.Message {
	mi := &file_marketData_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quant.ProtoReflect.Descriptor instead.
func (*Quant) Descriptor() ([]byte, []int) {
	return file_marketData_proto_rawDescGZIP(), []int{1}
}

func (x *Quant) GetUnits() int32 {
	if x != nil {
		return x.Units
	}
	return 0
}

func (x *Quant) GetNano() int32 {
	if x != nil {
		return x.Nano
	}
	return 0
}

type OHLC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open   *Quant                 `protobuf:"bytes,1,opt,name=open,proto3" json:"open,omitempty"`
	High   *Quant                 `protobuf:"bytes,2,opt,name=high,proto3" json:"high,omitempty"`
	Low    *Quant                 `protobuf:"bytes,3,opt,name=low,proto3" json:"low,omitempty"`
	Close  *Quant                 `protobuf:"bytes,4,opt,name=close,proto3" json:"close,omitempty"`
	Volume int64                  `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Time   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *OHLC) Reset() {
	*x = OHLC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketData_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OHLC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OHLC) ProtoMessage() {}

func (x *OHLC) ProtoReflect() protoreflect.Message {
	mi := &file_marketData_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OHLC.ProtoReflect.Descriptor instead.
func (*OHLC) Descriptor() ([]byte, []int) {
	return file_marketData_proto_rawDescGZIP(), []int{2}
}

func (x *OHLC) GetOpen() *Quant {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *OHLC) GetHigh() *Quant {
	if x != nil {
		return x.High
	}
	return nil
}

func (x *OHLC) GetLow() *Quant {
	if x != nil {
		return x.Low
	}
	return nil
}

func (x *OHLC) GetClose() *Quant {
	if x != nil {
		return x.Close
	}
	return nil
}

func (x *OHLC) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *OHLC) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

// Что хотим вернуть
type GetCandlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candles []*OHLC `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
}

func (x *GetCandlesResponse) Reset() {
	*x = GetCandlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketData_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandlesResponse) ProtoMessage() {}

func (x *GetCandlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_marketData_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandlesResponse.ProtoReflect.Descriptor instead.
func (*GetCandlesResponse) Descriptor() ([]byte, []int) {
	return file_marketData_proto_rawDescGZIP(), []int{3}
}

func (x *GetCandlesResponse) GetCandles() []*OHLC {
	if x != nil {
		return x.Candles
	}
	return nil
}

type SubscribeCandlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentId string `protobuf:"bytes,1,opt,name=instrumentId,proto3" json:"instrumentId,omitempty"`
	Interval     int32  `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *SubscribeCandlesRequest) Reset() {
	*x = SubscribeCandlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketData_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCandlesRequest) ProtoMessage() {}

func (x *SubscribeCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketData_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCandlesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeCandlesRequest) Descriptor() ([]byte, []int) {
	return file_marketData_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeCandlesRequest) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *SubscribeCandlesRequest) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type BidAsk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price    *Quant `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Quantity int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *BidAsk) Reset() {
	*x = BidAsk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketData_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidAsk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidAsk) ProtoMessage() {}

func (x *BidAsk) ProtoReflect() protoreflect.Message {
	mi := &file_marketData_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidAsk.ProtoReflect.Descriptor instead.
func (*BidAsk) Descriptor() ([]byte, []int) {
	return file_marketData_proto_rawDescGZIP(), []int{5}
}

func (x *BidAsk) GetPrice() *Quant {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *BidAsk) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type Orderbook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentId string                 `protobuf:"bytes,1,opt,name=instrumentId,proto3" json:"instrumentId,omitempty"`
	Depth        int32                  `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	Time         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	LimitUp      *Quant                 `protobuf:"bytes,4,opt,name=limitUp,proto3" json:"limitUp,omitempty"`
	LimitDown    *Quant                 `protobuf:"bytes,5,opt,name=limitDown,proto3" json:"limitDown,omitempty"`
	Bids         []*BidAsk              `protobuf:"bytes,6,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks         []*BidAsk              `protobuf:"bytes,7,rep,name=asks,proto3" json:"asks,omitempty"`
}

func (x *Orderbook) Reset() {
	*x = Orderbook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketData_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Orderbook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orderbook) ProtoMessage() {}

func (x *Orderbook) ProtoReflect() protoreflect.Message {
	mi := &file_marketData_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orderbook.ProtoReflect.Descriptor instead.
func (*Orderbook) Descriptor() ([]byte, []int) {
	return file_marketData_proto_rawDescGZIP(), []int{6}
}

func (x *Orderbook) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *Orderbook) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *Orderbook) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Orderbook) GetLimitUp() *Quant {
	if x != nil {
		return x.LimitUp
	}
	return nil
}

func (x *Orderbook) GetLimitDown() *Quant {
	if x != nil {
		return x.LimitDown
	}
	return nil
}

func (x *Orderbook) GetBids() []*BidAsk {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *Orderbook) GetAsks() []*BidAsk {
	if x != nil {
		return x.Asks
	}
	return nil
}

type SubscribeOrderbookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentId string `protobuf:"bytes,1,opt,name=instrumentId,proto3" json:"instrumentId,omitempty"`
	Depth        int32  `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
}

func (x *SubscribeOrderbookRequest) Reset() {
	*x = SubscribeOrderbookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketData_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeOrderbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOrderbookRequest) ProtoMessage() {}

func (x *SubscribeOrderbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketData_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOrderbookRequest.ProtoReflect.Descriptor instead.
func (*SubscribeOrderbookRequest) Descriptor() ([]byte, []int) {
	return file_marketData_proto_rawDescGZIP(), []int{7}
}

func (x *SubscribeOrderbookRequest) GetInstrumentId() string {
	if x != nil {
		return x.InstrumentId
	}
	return ""
}

func (x *SubscribeOrderbookRequest) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

var File_marketData_proto protoreflect.FileDescriptor

var file_marketData_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb3, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x31, 0x0a, 0x05, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6e, 0x61, 0x6e, 0x6f, 0x22, 0xea, 0x01, 0x0a, 0x04, 0x4f, 0x48, 0x4c,
	0x43, 0x12, 0x25, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12,
	0x23, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52,
	0x03, 0x6c, 0x6f, 0x77, 0x12, 0x27, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x48, 0x4c, 0x43, 0x52, 0x07,
	0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x22, 0x4d, 0x0a, 0x06, 0x42, 0x69, 0x64, 0x41, 0x73, 0x6b, 0x12, 0x27, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0xa3, 0x02, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x55, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x12, 0x2f, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x44,
	0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x42, 0x69, 0x64, 0x41, 0x73, 0x6b, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12,
	0x26, 0x0a, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x42, 0x69, 0x64, 0x41, 0x73,
	0x6b, 0x52, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x55, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x32, 0xfc,
	0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x23,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x4f, 0x48, 0x4c, 0x43, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x25, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x30, 0x01, 0x42, 0x13, 0x5a,
	0x11, 0x67, 0x72, 0x70, 0x63, 0x47, 0x57, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_marketData_proto_rawDescOnce sync.Once
	file_marketData_proto_rawDescData = file_marketData_proto_rawDesc
)

func file_marketData_proto_rawDescGZIP() []byte {
	file_marketData_proto_rawDescOnce.Do(func() {
		file_marketData_proto_rawDescData = protoimpl.X.CompressGZIP(file_marketData_proto_rawDescData)
	})
	return file_marketData_proto_rawDescData
}

var file_marketData_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_marketData_proto_goTypes = []interface{}{
	(*GetCandlesRequest)(nil),         // 0: marketData.GetCandlesRequest
	(*Quant)(nil),                     // 1: marketData.Quant
	(*OHLC)(nil),                      // 2: marketData.OHLC
	(*GetCandlesResponse)(nil),        // 3: marketData.GetCandlesResponse
	(*SubscribeCandlesRequest)(nil),   // 4: marketData.SubscribeCandlesRequest
	(*BidAsk)(nil),                    // 5: marketData.BidAsk
	(*Orderbook)(nil),                 // 6: marketData.Orderbook
	(*SubscribeOrderbookRequest)(nil), // 7: marketData.SubscribeOrderbookRequest
	(*timestamppb.Timestamp)(nil),     // 8: google.protobuf.Timestamp
}
var file_marketData_proto_depIdxs = []int32{
	8,  // 0: marketData.GetCandlesRequest.start:type_name -> google.protobuf.Timestamp
	8,  // 1: marketData.GetCandlesRequest.end:type_name -> google.protobuf.Timestamp
	1,  // 2: marketData.OHLC.open:type_name -> marketData.Quant
	1,  // 3: marketData.OHLC.high:type_name -> marketData.Quant
	1,  // 4: marketData.OHLC.low:type_name -> marketData.Quant
	1,  // 5: marketData.OHLC.close:type_name -> marketData.Quant
	8,  // 6: marketData.OHLC.time:type_name -> google.protobuf.Timestamp
	2,  // 7: marketData.GetCandlesResponse.candles:type_name -> marketData.OHLC
	1,  // 8: marketData.BidAsk.price:type_name -> marketData.Quant
	8,  // 9: marketData.Orderbook.time:type_name -> google.protobuf.Timestamp
	1,  // 10: marketData.Orderbook.limitUp:type_name -> marketData.Quant
	1,  // 11: marketData.Orderbook.limitDown:type_name -> marketData.Quant
	5,  // 12: marketData.Orderbook.bids:type_name -> marketData.BidAsk
	5,  // 13: marketData.Orderbook.asks:type_name -> marketData.BidAsk
	0,  // 14: marketData.MarketData.GetCandles:input_type -> marketData.GetCandlesRequest
	4,  // 15: marketData.MarketData.SubscribeCandles:input_type -> marketData.SubscribeCandlesRequest
	7,  // 16: marketData.MarketData.SubscribeOrderbook:input_type -> marketData.SubscribeOrderbookRequest
	3,  // 17: marketData.MarketData.GetCandles:output_type -> marketData.GetCandlesResponse
	2,  // 18: marketData.MarketData.SubscribeCandles:output_type -> marketData.OHLC
	6,  // 19: marketData.MarketData.SubscribeOrderbook:output_type -> marketData.Orderbook
	17, // [17:20] is the sub-list for method output_type
	14, // [14:17] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_marketData_proto_init() }
func file_marketData_proto_init() {
	if File_marketData_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_marketData_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketData_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketData_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OHLC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketData_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketData_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeCandlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketData_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidAsk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketData_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Orderbook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketData_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeOrderbookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_marketData_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_marketData_proto_goTypes,
		DependencyIndexes: file_marketData_proto_depIdxs,
		MessageInfos:      file_marketData_proto_msgTypes,
	}.Build()
	File_marketData_proto = out.File
	file_marketData_proto_rawDesc = nil
	file_marketData_proto_goTypes = nil
	file_marketData_proto_depIdxs = nil
}
